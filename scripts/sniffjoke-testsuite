#!/bin/sh

PLUGINLIST="/tmp/sniffjoke-testsuite-plugins"
SCRAMBLELIST="/tmp/sniffjoke-testsuite-scramble"

# if you want modify the test, simply create those file by hands
dump_plugin_file() {
	echo "fake_close_fin.so" > $PLUGINLIST
	echo "fake_close_rst.so" >> $PLUGINLIST
	echo "fake_data.so" >> $PLUGINLIST
	echo "fake_seq.so" >> $PLUGINLIST
	echo "fake_syn.so" >> $PLUGINLIST
	echo "fake_zero_window.so" >> $PLUGINLIST
	echo "shift_ack.so" >> $PLUGINLIST
	echo "valid_rst_fake_seq.so" >> $PLUGINLIST
}

dump_scramble_file() {
	echo "YNN" > $SCRAMBLELIST
	echo "NYN" >> $SCRAMBLELIST
	echo "NNY" >> $SCRAMBLELIST
}

start_singletest() {
	TESTID=`echo "sj-$OS-$PLUGNDX-$SCRAMBNDX"`
	echo "+ Starting sniffjoke with $PLUGIN and $SCRAMBLE to [$SERVER] (test ID: $TESTID)"
	$SNIFFJOKEBIN --debug 6 --logfile /tmp/$TESTID/logtest --chroot-dir /tmp/$TESTID --only-plugin $PPATH/$PLUGIN --scramble $SCRAMBLE
	sleep 1
	$SNIFFJOKEBIN set 80 80 heavy 
	$SNIFFJOKEBIN start 
	cd /tmp/$TESTID
	#Â $SERVER is like http://www.delirandom.net/sniffjoke_test/post_echo.php
	INTERFACE=`$SNIFFJOKEBIN stat | grep "local interface" | cut -b 19- | sed -es/\,.*//`
	echo "starting tcpdump in $INTERFACE dumping /tmp/$TESTID/$TESTID.pcap tcp port 80"
	(tcpdump -i $INTERFACE -w /tmp/$TESTID/$TESTID.pcap -s 0 tcp port 80) &
	sleep 1
	curl -d "sparedata=`cat $GENERATEDFILE`" $SERVER > received_echo
	$SNIFFJOKEBIN quit
	killall -9 tcpdump
	CHECKSUM=`md5sum $GENERATEDFILE | cut -b -32`
	cd ..
	echo "finished test in $TESTID"
	echo "Results for $PLUGIN + $SCRAMBLE\t (sent) $VERIFYSUM (recv) $CHECKSUM" >> /tmp/sniffjoke-stats
	sleep 1
	clear
}

echo "Sniffjoke testsuite test every default plugin with every scrambling tech"

USERID=`id -u`
if [ $USERID != "0" ]; then
	echo "- Error, only root should run $0"
	exit;
fi

SNIFFJOKEBIN="/usr/local/bin/sniffjoke"

if [ ! -x $SNIFFJOKEBIN ]; then
	echo "$SNIFFJOKEBIN is not a valid executable"
	exit;
fi

echo "+ Starting SniffJoke hacks test"
echo "* Stopping running sniffjoke ($SNIFFJOKEBIN quit)"
$SNIFFJOKEBIN quit

PPATH="/usr/local/lib/sniffjoke"

FILEURL="http://www.delirandom.net/sniffjoke/testsuite.info"
echo "retrivering multi-OS testing server list ($FILEURL)"
SERVERFILE="/tmp/testsuite.info"
rm -f $SERVERFILE
wget -O $SERVERFILE $FILEURL

if ! [ -e $SERVERFILE ]; then
	echo "- unable to retriver $SERVERFILE by wget $FILEURL"
	exit;
fi

# generate the test file
GENERATEDFILE="/tmp/tosend_data.generated"
seq 1000 3000 > $GENERATEDFILE
VERIFYSUM=`md5sum $GENERATEDFILE | cut -b -32`

if ! [ -e $PLUGINLIST ]; then
	dump_plugin_file
fi

if ! [ -e $SCRAMBLELIST ]; then
	dump_scramble_file
fi

PLUGIN_NUMBER=`wc -l < $PLUGINLIST`
SCRAMBLE_NUMBER=`wc -l < $SCRAMBLELIST`

for PLUGNDX in `seq 1 $PLUGIN_NUMBER`; do
	for SCRAMBNDX in `seq 1 $SCRAMBLE_NUMBER`; do

		PLUGIN=`tail -$PLUGNDX $PLUGINLIST | head -1`
		SCRAMBLE=`tail -$SCRAMBNDX $SCRAMBLELIST | head -1`

		OS="WINDOWS"
		SERVER=`cat "$SERVERFILE" | grep "$OS" | cut -b 9-`
		echo $SERVER
		start_singletest 

		OS="LINUX"
		SERVER=`grep "$OS=" $SERVERFILE | cut -b 7-`
		echo $SERVER
		start_singletest 

		OS="OTHER"
		SERVER=`grep "$OS=" $SERVERFILE | cut -b 7-`
		echo $SERVER
		start_singletest 
	done
done
